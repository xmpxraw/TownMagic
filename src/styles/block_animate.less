@charset "UTF-8";

:root {
  --animate-duration: 1s;
  --animate-delay: 1s;
  --animate-repeat: 1;
}

.animate__animated {
  animation-duration: 1s;
  animation-duration: var(--animate-duration);
  animation-fill-mode: both;
}

.animate__animated.animate__infinite {
  animation-iteration-count: infinite;
}

.animate__animated.animate__repeat-1 {
  animation-iteration-count: 1;
  animation-iteration-count: var(--animate-repeat);
}

.animate__animated.animate__repeat-2 {
  animation-iteration-count: calc(1 * 2);
  animation-iteration-count: calc(var(--animate-repeat) * 2);
}

.animate__animated.animate__repeat-3 {
  animation-iteration-count: calc(1 * 3);
  animation-iteration-count: calc(var(--animate-repeat) * 3);
}

.animate__animated.animate__delay-1s {
  animation-delay: 1s;
  animation-delay: var(--animate-delay);
}

.animate__animated.animate__delay-2s {
  animation-delay: calc(1s * 2);
  animation-delay: calc(var(--animate-delay) * 2);
}

.animate__animated.animate__delay-3s {
  animation-delay: calc(1s * 3);
  animation-delay: calc(var(--animate-delay) * 3);
}

.animate__animated.animate__delay-4s {
  animation-delay: calc(1s * 4);
  animation-delay: calc(var(--animate-delay) * 4);
}

.animate__animated.animate__delay-5s {
  animation-delay: calc(1s * 5);
  animation-delay: calc(var(--animate-delay) * 5);
}

.animate__animated.animate__faster {
  animation-duration: calc(1s / 2);
  animation-duration: calc(var(--animate-duration) / 2);
}

.animate__animated.animate__fast {
  animation-duration: calc(1s * 0.8);
  animation-duration: calc(var(--animate-duration) * 0.8);
}

.animate__animated.animate__slow {
  animation-duration: calc(1s * 2);
  animation-duration: calc(var(--animate-duration) * 2);
}

.animate__animated.animate__slower {
  animation-duration: calc(1s * 3);
  animation-duration: calc(var(--animate-duration) * 3);
}

@media print,
(prefers-reduced-motion: reduce) {
  .animate__animated {
    animation-duration: 1ms !important;
    transition-duration: 1ms !important;
    animation-iteration-count: 1 !important;
  }

  .animate__animated[class*='Out'] {
    opacity: 0;
  }
}

.animate__flowerSpinClockwise {
  animation: flowerSpinClockwise .8s linear infinite;
  transform-origin: center center;
}

.animate__Counterclockwise {
  animation: Counterclockwise 2s linear infinite;
  transform-origin: center center;
}

// 花瓣顺时针旋转
@keyframes flowerSpinClockwise {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

// 花瓣逆时针旋转
@keyframes Counterclockwise {
  0% {
    transform: rotate(360deg);
  }

  100% {
    transform: rotate(0deg);
  }
}

@keyframes GirlFloat {
  from {
    transform: translate(0, 0)
  }

  to {
    transform: translate(0, 20px)
  }
}


// 鹤在飞
@keyframes animX {
  0% {
    left: -1800px;
  }

  100% {
    left: 3000px;
  }
}

@keyframes animY {
  0% {
    bottom: 150px;
  }

  100% {
    bottom: 24px;
  }
}

// 鹤缩放
@keyframes scale {
  0% {
    transform: scale(0.3) rotateY(180deg);
  }

  50% {
    transform: scale(1);
    z-index: 19;
  }

  100% {
    transform: scale(0.3) rotateY(180deg);
  }
}